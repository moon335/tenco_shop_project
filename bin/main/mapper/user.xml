<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.tenco.tencoshop.repository.interfaces.UserRepository">
	<select id="buyList"
		resultType="com.tenco.tencoshop.dto.ProductRequestDto">
		select o.id, u.id AS user_id ,p.eng_name,o.delivery_status,
		s.name as
		size_name, date_format(order_date,'%Y-%m-%d')as order_date
		from user_tb
		as u
		join order_tb as o
		on o.user_id = u.id
		join product_tb
		as p
		on p.id =
		o.product_id
		join size_tb as s
		on p.size_id = s.id
		where
		u.id=#{userId};
	</select>

	<select id="salesList"
		resultType="com.tenco.tencoshop.dto.ProductRequestDto">
		select o.id,p.img_route,u.username, u.id AS user_id
		,p.eng_name,o.delivery_status, s.name as
		size_name,
		date_format(order_date,'%Y-%m-%d')as order_date
		from user_tb
		as u
		join
		order_tb as o
		on o.user_id = u.id
		join product_tb as p
		on p.id =
		o.product_id
		join size_tb as s
		on p.size_id = s.id;
	</select>

	<select id="searchBuyList"
		resultType="com.tenco.tencoshop.dto.ProductRequestDto">
		select o.id, u.id AS user_id ,p.eng_name,o.delivery_status,
		s.name as
		size_name,date_format(order_date,'%Y-%m-%d')as order_date
		from user_tb
		as u
		join order_tb as o
		on o.user_id = u.id
		join product_tb
		as p
		on p.id =
		o.product_id
		join size_tb as s
		on p.size_id = s.id
		where
		u.id=#{userId}
		AND
		order_date
		BETWEEN #{orderStartDate}
		AND
		#{orderEndDate};
	</select>

	<select id="userInfoAll"
		resultType="com.tenco.tencoshop.repository.model.User">
		select * from user_tb
	</select>

	<select id="userInfoSelect"
		resultType="com.tenco.tencoshop.repository.model.User">
		select * from user_tb
		where id=#{id}
	</select>

	<update id="userInfoUpdate">
		update user_tb set
		email=#{email},
		password=#{password},
		last_name=#{lastName},
		tel=#{tel}
		where id=#{id};
	</update>

	<update id="userInfoUpdateImage">
		update user_tb set
		image=#{image}
		where id=#{id};
	</update>


	<insert id="signUp">
		insert into user_tb (username, password, tel,
		address, email, first_name, last_name)
		values( #{username},
		#{password}, #{tel},
		#{address},#{email},#{firstName},#{lastName});
	</insert>

	<insert id="signUpAdmin">
		insert into user_tb (username, password, tel,
		address, email, first_name, last_name,role)
		values( #{username},
		#{password}, #{tel},
		#{address},#{email},#{firstName},#{lastName},'admin');
	</insert>

	<delete id="delete">
		delete from user_tb where username=#{username}
	</delete>

	<select id="findByPassword"
		resultType="com.tenco.tencoshop.repository.model.User">
		select * from user_tb
		where username=#{username}
	</select>

	<update id="userDelete">
		update user_tb set
		withdraw = 0,
		username=#{id}000
		where id = #{id};
	</update>

	<select id="findByUsername" resultType="com.tenco.tencoshop.repository.model.User">
		select * from user_tb
		where username = #{username}
	</select>
	
	<select id="findByUserId" resultType="com.tenco.tencoshop.repository.model.User">
		select * from user_tb
		where id = #{userId}
	</select>
	
	<select id="orderCounter"
		resultType="com.tenco.tencoshop.dto.OrderResponseDto">
		select count(case when delivery_status=0 then 1 end) AS
		delivery_non_complete,count(case when delivery_status=1 then 1 end) AS
		delivery_complete,count(*) AS delivery_count
		from order_tb
		where user_id=#{userId};
	</select>
	
	<select id="idCheck" resultType="int">
		select count(*) from user_tb
		where username = #{username} 
	</select>

</mapper>
	

